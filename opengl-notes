Triangle Drawing;
-----------------------------------------------------------------------------------------------------------------------------------------------
Objects used:

1. Shader Objects

   - Vertex Shader (vertexShader): Processes each vertex and transforms its position.
   - Fragment Shader (fragmentShader): Determines the color of each fragment (pixel).
   - Shader Program (shaderProgram): Combines both shaders and runs them during rendering.

2. Vertex Data and Buffers

    - Vertex Array Object (VAO): Stores the configuration of vertex attributes and buffer bindings. It acts as a container for the vertex state.
    - Vertex Buffer Object (VBO): Stores vertex data (triangle coordinates) in GPU memory.
    - Vertex Attribute Pointer (glVertexAttribPointer): Defines how vertex data is read from the VBO.

Pipeline:
1.Shader Compilation & Linking: Converts GLSL code into a format the GPU can execute.
2.Vertex Data Binding: Links the triangleâ€™s vertex data to the rendering pipeline.
3.Rendering Loop:

    1. Clears the screen.
    2. Uses the shader program.
    3. Binds the VAO.
    4. Draws the triangle with glDrawArrays().
    5. Swaps buffers to display the updated frame.
    
Cleanup:
    
    - Deletes VAO, VBO, and shader program to free memory before exiting.
